#! /usr/bin/env python
import argparse
import os

from lme_pipeline.workflows import create_lme_metrics_workflow

def coords(s):
    try:
        print(s)
        x, y, z = map(float, s.split(','))
        print(x)
        print(y)
        print(z)
        return x, y, z
    except:
        raise argparse.ArgumentTypeError("Coordinates must be x,y,z")

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description = 'Obtain thickness, MTR, and T2-star metrics at an LME. Requires IACL '
                                                   'pipeline to have been run.')
    parser.add_argument('-d', '--directory', type=str, help='IACL root directory', required=True)
    parser.add_argument('-p', '--patient-id', type=str, required=True)
    parser.add_argument('-s', '--scan-id', type=str, required=True)
    parser.add_argument('-i', '--image-files', help='List of image files in IACL space to obtain metrics from', type=str, nargs='+')
    parser.add_argument('-c', '--coord', type=coords, help='List of LME coordinates', nargs='+')
    parser.add_argument('-t', '--num_threads', type=int, default=1)
    args = parser.parse_args()

    if args.directory is not None:
        args.directory = os.path.abspath(os.path.expanduser(args.directory))

    if args.image_files is not None:
        args.image_files = [os.path.abspath(os.path.expanduser(f)) for f in args.image_files]

    wf = create_lme_metrics_workflow(args.directory, args.patient_id, args.scan_id, args.reg_mt, args.coord)

    if args.image_files is not None:
        wf.inputs.input_node.image_files = args.image_files

    if args.num_threads == 1:
        wf.run()
    else:
        wf.run(plugin='MultiProc', plugin_args={'n_procs': args.num_threads})

